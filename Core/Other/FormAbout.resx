<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>